# .github/workflows/release.yaml

on:
  release:
    types: [created]

jobs:
  build-linux:
    name: Build Linux Client
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16
    - name: Build
      run: make build-linux
    - uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: update-linux-amd64.gz
    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y devscripts debhelper build-essential
    - name: Prepare package directory
      run: |
        mkdir -p pkg/deb/usr/bin
        cp albiondata-client pkg/deb/usr/bin
    - name: Download changelog artifact
        uses: actions/download-artifact@v2
        with:
          name: changelog
          path: pkg/deb/debian
    - name: Create changelog
      run: |
        cd pkg/deb/
        DEBEMAIL="dhjen@outlook.com" dch --create --newversion $GITHUB_REF_NAME --package albiondata-client "$GITHUB_REF_NAME build"
    - name: Build Debian package
      run: |
        cd pkg/deb
        debuild -b -us -uc
    - name: Upload changelog as artifact
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: pkg/deb/debian/changelog
    - uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: pkg/*.deb

  build-windows:
    name: Build Windows Client
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16

    - name: install nsis
      run: sudo apt-get update; sudo apt-get -y install nsis

    - name: Make
      run: make build-windows

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: albiondata-client.exe

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: update-windows-amd64.exe.gz

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: albiondata-client-amd64-installer.exe

    - uses: shogo82148/actions-upload-release-asset@v1
      if: ${{ !env.ACT }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: update-windows-amd64.exe.gz

    - uses: shogo82148/actions-upload-release-asset@v1
      if: ${{ !env.ACT }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: albiondata-client-amd64-installer.exe

  build-darwin:
    name: Build MacOS Client
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -ldflags "-s -w -X main.version=$GITHUB_REF_NAME" albiondata-client.go

    - name: ls
      run: ls -la

    - name: gzip
      run: gzip -k9 albiondata-client

    - name: mv
      run: mv albiondata-client.gz update-darwin-amd64.gz

    - name: package
      run: |
        TEMP="albiondata-client"
        ZIPNAME="albiondata-client-amd64-mac.zip"
        rm -rfv ./scripts/$TEMP
        rm -rfv ./$ZIPNAME
        rm -rfv ./scripts/update-darwin-amd64.zip
        mkdir -v ./scripts/$TEMP
        cp -v albiondata-client ./scripts/$TEMP/albiondata-client-executable
        cd scripts
        cp -v run.command ./$TEMP/run.command
        # chown -Rv ${USER}:${USER} ./$TEMP
        chmod -v 777 ./$TEMP/*
        zip -v ../$ZIPNAME -r ./"$TEMP"

    - name: ls
      run: ls -la

    - uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: update-darwin-amd64.gz
    - uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: albiondata-client-amd64-mac.zip
