# .github/workflows/test-build.yaml

on: 
  push:
  pull_request:

jobs:
  build-linux:
    name: Build Linux Client
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16
    - name: Build
      run: make build-linux

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: albiondata-client

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: update-linux-amd64.gz

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y devscripts

    - name: Prepare package directory
      run: |
        mkdir -p pkg/deb/usr/bin
        cp albiondata-client pkg/deb/usr/bin
        echo "Source: albiondata-client" > pkg/deb/debian/control
        echo "Maintainer: Daniel Jensen <dhjen@outlook.com" >> pkg/deb/debian/control
        echo "Section: utils" >> pkg/deb/debian/control
        echo "Priority: optional" >> pkg/deb/debian/control
        echo "Version: 0.1.44" >> pkg/deb/debian/control
        echo "Package: albiondata-client" >> pkg/deb/debian/control
        echo "Architecture: amd64" >> pkg/deb/debian/control
        echo "Depends: libpcap-dev (>= 1.10.4)" >> pkg/deb/debian/control
        echo "Description: albiondata-client installation package" >> pkg/deb/debian/control
        echo "Homepage: https://www.albion-online-data.com/" >> pkg/deb/debian/control
        echo "#!/usr/bin/make -f" > pkg/deb/debian/rules
        echo "%:" >> pkg/deb/debian/rules
        echo "    dh \$@" >> pkg/deb/debian/rules
        chmod +x pkg/deb/debian/rules

    - name: Create changelog
      run: |
        cd pkg/deb/
        DEBEMAIL="dhjen@outlook.com" dch --create --newversion 0.1.44 --package albiondata-client "Test build"

    - name: Build Debian package
      run: |
        cd pkg/deb
        debuild -us -uc

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: pgk/deb/*.deb

  build-windows:
    name: Build Windows Client
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16

    - name: install nsis
      run: sudo apt-get update; sudo apt-get -y install nsis

    - name: Make
      run: make build-windows

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: albiondata-client.exe

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: update-windows-amd64.exe.gz

    - uses: actions/upload-artifact@v4
      if: ${{ env.ACT }}
      with:
        name: files
        path: albiondata-client-amd64-installer.exe

  build-darwin:
    name: Build MacOS Client
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -ldflags "-s -w -X main.version=$GITHUB_REF_NAME" albiondata-client.go

    - name: ls
      run: ls -la

    - name: gzip
      run: gzip -k9 albiondata-client

    - name: mv
      run: mv albiondata-client.gz update-darwin-amd64.gz

    - name: package
      run: |
        TEMP="albiondata-client"
        ZIPNAME="albiondata-client-amd64-mac.zip"
        rm -rfv ./scripts/$TEMP
        rm -rfv ./$ZIPNAME
        rm -rfv ./scripts/update-darwin-amd64.zip
        mkdir -v ./scripts/$TEMP
        cp -v albiondata-client ./scripts/$TEMP/albiondata-client-executable
        cd scripts
        cp -v run.command ./$TEMP/run.command
        # chown -Rv ${USER}:${USER} ./$TEMP
        chmod -v 777 ./$TEMP/*
        zip -v ../$ZIPNAME -r ./"$TEMP"

    - name: ls
      run: ls -la
